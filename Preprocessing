{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOpxHHi+f/MW+IabgwtGCBs",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/burasakorny/CSVdatateaching/blob/main/Preprocessing\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_m-DMwIS0Rut",
        "outputId": "56d182d0-df34-406e-cfaf-5bd59e215578"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3.070778686996437"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ],
      "source": [
        "import pandas as pd\n",
        "from sklearn import linear_model, preprocessing\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import accuracy_score\n",
        "df=pd.read_csv(\"score.csv\")\n",
        "X = df[[\"midterm_score\", \"hour_study\"]]\n",
        "y = df[\"total_score\"]\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=33)\n",
        "scaler = preprocessing.StandardScaler().fit( X_train )\n",
        "X_train = scaler.transform(X_train)\n",
        "X_test = scaler.transform(X_test)\n",
        "lm = linear_model.LinearRegression()\n",
        "lm.fit (X,y)\n",
        "y_predicted = lm.predict(X)\n",
        "y_predicted\n",
        "rmse = mean_squared_error(y, y_predicted, squared=False)\n",
        "rmse\n"
      ]
    }
  ]
}